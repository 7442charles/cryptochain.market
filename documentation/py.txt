from doctest import master
from email.mime import image
from pickletools import float8
from tkinter import*
import sqlite3
import tkinter.messagebox

conn = sqlite3.connect("C:\\Users\\Eddie\\Desktop\\personnal projects\\ziwaknit pos\\database\\database.db")
c = conn.cursor()

result = c.execute("SELECT Max(id) From Inventory")
for r in result:
    id = r[0]

class Database:
    def __init__(self, master, *args, **kwargs):
        
        self.master = master
        self.heading = Label(master, text="Add to system", font=('arial 35 bold'), fg='#6B0A6B' )
        self.heading.place(x=380, y=0)

        #labels for the window

        self.name_1 = Label(master, text="Enter Product name", font=('arial 18 bold'))
        self.name_1.place(x=0, y=70)

        self.stock_1 = Label(master, text="Enter Stock", font=('arial 18 bold'))
        self.stock_1.place(x=0, y=120)

        self.cost_price_1 = Label(master, text="Enter Cost price(Ksh)", font=('arial 18 bold'))
        self.cost_price_1.place(x=0, y=170)

        self.selling_price_1 = Label(master, text="Enter Selling Price(Ksh)", font=('arial 18 bold'))
        self.selling_price_1.place(x=0, y=220)

        self.vendor_1 = Label(master, text="Vendor name", font=('arial 18 bold'))
        self.vendor_1.place(x=0, y=270)

        self.vendor_phone_1 = Label(master, text="Vendor's Contact", font=('arial 18 bold'))
        self.vendor_phone_1.place(x=0, y=320)

        self.id_1 = Label(master, text="Enter Item Code", font=('arial 18 bold'))
        self.id_1.place(x=0, y=370)
    # entries for the label

        self.name_e = Entry(master, width=25, font=('arial 18 bold'))
        self.name_e.place(x=380, y=70)

        self.stock_e = Entry(master, width=25, font=('arial 18 bold'))
        self.stock_e.place(x=380, y=120)

        self.cost_price_e = Entry(master, width=25, font=('arial 18 bold'))
        self.cost_price_e.place(x=380, y=170)     

        self.selling_price_e = Entry(master, width=25, font=('arial 18 bold'))
        self.selling_price_e.place(x=380, y=220)

        self.vendor_e = Entry(master, width=25, font=('arial 18 bold'))
        self.vendor_e.place(x=380, y=270)

        self.vendor_phone_e = Entry(master, width=25, font=('arial 18 bold'))
        self.vendor_phone_e.place(x=380, y=320)

        self.id_e = Entry(master, width=25, font=('arial 18 bold'))
        self.id_e.place(x=380, y=370)

    # button to add to the database
        self.btn_add = Button(master, text ="Add To database", width=25, height= 2, bg='#6B0A6B', fg='white', command=self.get_items)
        self.btn_add.place(x=380, y=420)
    #button to clear entry fields
        self.btn_clear = Button(master, text="Clear All Fields", width=18, height=2, bg='blue', fg='white',command=self.clear_all)
        self.btn_clear.place(x=572,y=420)

    # text for the logs
        self.tBox = Text(master, width=60, height=18)
        self.tBox.place(x=750, y=70)
        self.tBox.insert(END, "ID has reached upto: " +str(id))

    def get_items(self, *args, **kwargs):
        self.name = self.name_e.get()
        self.stock= self.stock_e.get()
        self.cost_price = self.cost_price_e.get()
        self.selling_price = self.selling_price_e.get()
        self.vendor = self.vendor_e.get()
        self.vendor_phone = self.vendor_phone_e.get()

        self.total_costprice = float((self.cost_price) * float(self.stock))
        self.total_sellingprice = float(self.selling_price)*float(self.stock)
        self.assumed_profit = float(self.total_sellingprice-self.total_costprice)
        
        if self.name == "" or self.stock == "" or self.cost_price == "" or self.selling_price == "":
            tkinter.messagebox.showinfo("Error!", "Please fill all the fields.")
        else:
            sql = "INSERT INTO inventory(name, stock_available, cost_price, total_costprice, selling_price, total_sellingprice, assumed_profit, vendor, vendor_telephone_no) VALUES(?,?,?,?,?,?,?,?,?)"
            c.execute(sql, (self.name, self.stock, self.cost_price, self.total_costprice, self.selling_price, self.total_sellingprice, self.assumed_profit, self.vendor, self.vendor_phone))
            conn.commit()
            
            self.tBox.insert(END, "\n\nSuccessfully added " +str(self.name)+ " to database.")
    
    def clear_all(self, *args, **kwargs):
       
        self.name_e.delete(0, END)
        self.stock_e.delete(0, END)
        self.cost_price_e.delete(0, END)
        self.selling_price_e.delete(0,END)
        self.vendor_e.delete(0, END)
        self.vendor_phone_e.delete(0, END)
        self.id_e.delete(0,END)



root = Tk()
b = Database(root)

root.geometry("1366x768+0+0")
root.title("ADD TO DATABASE")
root.mainloop()

